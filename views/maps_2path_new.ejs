<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="img/footprints.ico">
    <link rel="apple-touch-icon" sizes="76x76" href="img/footprints.png">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

    <title>Where could I have gone?</title>

    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />

    <!-- Bootstrap core CSS     -->
    <link href="CSS/bootstrap.min.css" rel="stylesheet" />
    <link href="CSS/paper-kit.css" rel="stylesheet"/>

    <!--     Fonts and icons     -->
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,300,700' rel='stylesheet' type='text/css'>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" rel="stylesheet">
    <link href="CSS/nucleo-icons.css" rel="stylesheet"/>


    <!-- Google Maps Initialization -->
    <meta name="viewport" content="initial-scale=1.0">


    <title>WhereCouldIHaveGone</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
           * element that contains the map. */
          #map1,#map2 {
            height: 300px;
          }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-md fixed-top navbar-transparent" color-on-scroll="500">
        <div class="container">
            <div class="navbar-translate">
                <button class="navbar-toggler navbar-toggler-right navbar-burger" type="button" data-toggle="collapse" data-target="#navbarToggler" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-bar"></span>
                    <span class="navbar-toggler-bar"></span>
                    <span class="navbar-toggler-bar"></span>
                </button>
                <a class="navbar-brand" href="http://qhacks.io/">QHacks 2<i class="fa fa-heart heart"></i>18 </a>
            </div>
            <div class="collapse navbar-collapse" id="navbarToggler">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" rel="tooltip" title="Like us on Facebook" data-placement="bottom" href="https://www.facebook.com/CreativeTim" target="_blank">
                            <i class="fa fa-facebook-square"></i>
                            <p class="d-lg-none">Facebook</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" rel="tooltip" title="Follow us on Instagram" data-placement="bottom" href="https://www.instagram.com/CreativeTimOfficial" target="_blank">
                            <i class="fa fa-instagram"></i>
                            <p class="d-lg-none">Instagram</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" rel="tooltip" title="Star on GitHub" data-placement="bottom" href="https://github.com/ACalverley/qhacks_2018" target="_blank">
                            <i class="fa fa-github"></i>
                            <p class="d-lg-none">GitHub</p>
                        </a>
                    </li>
                    <li class="nav-item">
                      <a href="http://www.savethechildren.org/site/c.8rKLIXMGIpI4E/b.6153015/k.E633/Education.htm" target="_blank" class="btn btn-success btn-round">Donate</a>
                  </li>
              </ul>
          </div>
      </div>
    </nav>

    <div class="wrapper">
        <div class="page-header section-dark" style="background-image: url('img/antoine-barres.jpg')">
            <div class="filter"></div>
            <div class="content-center">
               <div class="container">
                    <div class="title-brand">
                        <h1 class="presentation-title">Where could I have gone?</h1>
                        <div class="fog-low">
                            <img src="img/fog-low.png" alt="">
                        </div>
                        <div class="fog-low right">
                            <img src="img/fog-low.png" alt="">
                        </div>
                    </div>

                    <h2 class="presentation-subtitle text-center">Connect with:</h2>
                    <div class="row">
                        <div style="margin-top: 7px; padding-right: 35px;" class="col-md-5 ml-auto mr-auto download-area">
                            <div style="margin-top: 20px;" class="col-md-5 ml-auto mr-auto download-area">
                                <center><a href="javascript:getUserLocation(0);" class="btn btn-success btn-round btn-photo"></a></center>
                            </div>
                        </div>
                    </div>
                    <h2 class="presentation-subtitle text-center" style="margin-top: 30px;">No Fitbit?</h2>
                    <div class="row">
                        <div style="margin-top: 7px;" class="col-md-5 ml-auto mr-auto download-area">
                            <div style="margin-top: 20px;" class="col-md-5 ml-auto mr-auto download-area">
                                <center><a href="javascript:getUserLocation(1);" class="btn btn-success btn-round ">Demo</a></center>
                            </div>
                        </div>
                    </div>
                    <div class="row justify-content-center pl-5 pt-5">
                    <h6 class="col-md-6">Created by
                        <a href="https://github.com/chrismaltais/wherecouldihavegone" target="_blank"> the Qhackers </a>
                        &
                        <a href="https://www.creative-tim.com" target="_blank">Creative Tim </a>
                    </h6>
                    </div>

            <!-- <div id="background-img" class="moving-clouds" style="background-image: url('img/clouds.png'); "></div>   -->
                </div>
            </div>
        </div>
        <section id="maps">
            <div class="container" style="padding-left: 80px;">
                <div class="tim-title">
                    <h2 style="margin-bottom: 20px;">Over the past 3 months, you have travelled <%= distanceTraveled %> km</h2>
                </div>

                <div class="row">
                    <div class="col-md-8">
                        <!-- <div class="col-spaced"> -->
                        <div id="map1"></div>
                        <!-- </div> -->
                    </div>
                    <div class="col-md-4">
                        <div class="col-spaced">
                            <div class="card">
                                <div class="card-header">Distance History</div>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item">1 day</li>
                                    <li class="list-group-item">1 week</li>
                                    <li class="list-group-item" style="background: #51bcda;">3 months</li>
                                    <li class="list-group-item">All time</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container" style="padding-left: 80px;">
                <hr>
                <div class="row" style="margin: auto;">

                    <div class="col-md-4">
                        <div class="col-spaced">
                            <div class="card">
                                <div class="card-header"><b>Perspective</b></div>
                                <div class="card-body">

                                    <p class="card-text">According to the Uganda Bureau of Statistics, Ugandan children have to walk an average of 12km a day for the opportunity to get an education. This would have been their trek, <b>soley for education</b>, over the past 3 months. </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <!-- <div class="col-spaced"> -->
                            <div id="map2"></div>
                        <!-- </div> -->
                    </div>

                </div>
            </div>
            <br>
        </section>
    </div>
</body>

<!-- CDN for Axios Module -->
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<!-- Core JS Files -->
<script src="js/jquery-3.2.1.js" type="text/javascript"></script>
<script src="js/jquery-ui-1.12.1.custom.min.js" type="text/javascript"></script>
<script src="js/popper.js" type="text/javascript"></script>
<script src="js/bootstrap.min.js" type="text/javascript"></script>

<!-- Switches -->
<script src="js/bootstrap-switch.min.js"></script>

<!--  Plugins for Slider -->
<script src="js/nouislider.js"></script>

<!--  Plugins for DateTimePicker -->
<script src="js/moment.min.js"></script>
<script src="js/bootstrap-datetimepicker.min.js"></script>

<!--  Paper Kit Initialization and functons -->
<script src="js/paper-kit.js"></script>

<script type="text/javascript" defer src="https://maps.googleapis.com/maps/api/js?key=<%=process.env.GOOGLEMAPS_API_KEY%>&libraries=drawing&callback=initMaps"></script>

<script>
    var map;
    function initMaps(){
        // post('/userLocation', {lat : position.coords.latitude, long : position.coords.longitude});
        initMap1();
        initMap2();
    }
    // HAD TO COMMENT THIS OUT, MAPS WERE NOT LOADING
    /*function layerMaps(map1ID){
        initMap1();
        layerMap2();
    }*/
    function initMap1(){
        var destination = "<%=user_destination%>";
        var markerArray1 = [];
        // Instantiate a directions service.
        var directionsService1 = new google.maps.DirectionsService;
        //Create a map and center it on user location from app.js
        map = new google.maps.Map(document.getElementById('map1'), {
            zoom: 13,
            center: {lat: <%=userLat%>, lng: <%=userLong%>}
        });
        // Create a renderer for directions and bind it to the map.
        var directionsDisplay1 = new google.maps.DirectionsRenderer({map: map});
        // Instantiate an info window to hold step text.
        var stepDisplay1 = new google.maps.InfoWindow;
        // Display the route between the initial start and end selections.
        calculateAndDisplayRoute(
            directionsDisplay1,
            directionsService1,
            markerArray1,
            stepDisplay1,
            map,
            destination
        );
    }
    function initMap2(position){
        var destination = "<%=ugandaChild_destination%>";
        var markerArray2 = [];
        // Instantiate a directions service.
        var directionsService2 = new google.maps.DirectionsService;
        //Create a new map and center on user location
        map = new google.maps.Map(document.getElementById('map2'), {
            zoom: 13,
            center: {lat: <%=userLat%>, lng: <%=userLong%>}
        });
        // Create a renderer for directions and bind it to the map.
        var directionsDisplay2 = new google.maps.DirectionsRenderer({map: map});
        // Instantiate an info window to hold step text.
        var stepDisplay2 = new google.maps.InfoWindow;
        // Display the route between the initial start and end selections.
        calculateAndDisplayRoute(
            directionsDisplay2,
            directionsService2,
            markerArray2,
            stepDisplay2,
            map,
            destination
        );
    }
    function layerMap2(){
        var destination = "<%=ugandaChild_destination%>";
        var markerArray2 = [];
        // Instantiate a directions service.
        var directionsService2 = new google.maps.DirectionsService;
        // add second direction display on top of existing map
        var directionsDisplay2 = new google.maps.DirectionsRenderer({map: map});
        // Instantiate an info window to hold step text.
        var stepDisplay2 = new google.maps.InfoWindow;
        // Display the route between the initial start and end selections.
        calculateAndDisplayRoute(
            directionsDisplay2,
            directionsService2,
            markerArray2,
            stepDisplay2,
            map,
            destination
        );
    }
    function calculateAndDisplayRoute(directionsDisplay, directionsService,
        markerArray, stepDisplay, map, destination) {
      console.log(map);
      // First, remove any existing markers from the map.
      for (var i = 0; i < markerArray.length; i++) {
        markerArray[i].setMap(null);
      }
      // Retrieve the start and end locations and create a DirectionsRequest using
      // WALKING directions.
      directionsService.route({
        origin: "<%= origin %>",
        destination: destination,
        travelMode: 'WALKING'
      }, function(response, status) {
        // Route the directions and pass the response to a function to create
        // markers for each step.
        if (status === 'OK') {
          // document.getElementById('warnings-panel').innerHTML =
          //     '<b>' + response.routes[0].warnings + '</b>';
          directionsDisplay.setDirections(response);
          console.log("made it here");
          console.log(response);
          // showSteps(response, markerArray, stepDisplay, map);
        } else {
            console.log("Could not calculate and display route in LayerMap2")
            window.alert('Directions request failed due to ' + status);
        }
      });
    }
    function showSteps(directionResult, markerArray, stepDisplay, map) {
      // For each step, place a marker, and add the text to the marker's infowindow.
      // Also attach the marker to an array so we can keep track of it and remove it
      // when calculating new routes.
      var myRoute = directionResult.routes[0].legs[0];
      for (var i = 0; i < myRoute.steps.length; i++) {
        var marker = markerArray[i] = markerArray[i] || new google.maps.Marker;
        marker.setMap(map);
        marker.setPosition(myRoute.steps[i].start_location);
        attachInstructionText(
            stepDisplay, marker, myRoute.steps[i].instructions, map);
      }
    }
    function attachInstructionText(stepDisplay, marker, text, map) {
      google.maps.event.addListener(marker, 'click', function() {
        // Open an info window when the marker is clicked on, containing the text
        // of the step.
        stepDisplay.setContent(text);
        stepDisplay.open(map, marker);
      });
    }
</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

<script type="text/javascript">
    function getUserLocation(isDemo) {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(sendUserLocation, error);
        } else {
            error('Geolocation not supported on this browser.')
        }

        function post(path, params, method) {
            method = method || "post"; // Set method to post by default if not specified.

            // The rest of this code assumes you are not using a library.
            // It can be made less wordy if you use one.
            var form = document.createElement("form");
            form.setAttribute("method", method);
            form.setAttribute("action", path);

            for(var key in params) {
                if(params.hasOwnProperty(key)) {
                    var hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", key);
                    hiddenField.setAttribute("value", params[key]);

                    form.appendChild(hiddenField);
                }
            }

            document.body.appendChild(form);
            form.submit();
        }

        function sendUserLocation(position){
            post('/userLocation/', {lat : position.coords.latitude, long : position.coords.longitude, isDemo : isDemo});
        }

        // if the user doesn't allow their location to be revealed - should add image inside maps to say "Only available if you let us know your location!"
        function error(msg) {
            console.log(msg);
        }
    }
</script>

</html>
